package ca.cgjennings.apps.librivox.metadata;

import ca.cgjennings.apps.librivox.Checker;
import javax.swing.ImageIcon;
import java.awt.image.BufferedImage;
import static ca.cgjennings.apps.librivox.Checker.string;

/**
 * A simple dialog for displaying artwork stored in metadata.
 *
 * @author Christopher G. Jennings (cjennings@acm.org)
 * @since 0.91
 */
class ArtViewer extends javax.swing.JDialog {

    /**
     * Creates new form ArtViewer
     */
    public ArtViewer(java.awt.Frame parent, BufferedImage bi) {
        super(parent, false);
        setUndecorated(true);
        initComponents();
        artLabel.setIcon(new ImageIcon(bi));
        Checker.popToEdge(this, 0);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        scrollPane = new javax.swing.JScrollPane();
        artLabel = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle(string("mv-art-viewer-title")); // NOI18N
        addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                formFocusLost(evt);
            }
        });

        scrollPane.setBorder(javax.swing.BorderFactory.createCompoundBorder(javax.swing.BorderFactory.createLineBorder(java.awt.Color.gray), javax.swing.BorderFactory.createCompoundBorder(javax.swing.BorderFactory.createLineBorder(java.awt.Color.white, 6), javax.swing.BorderFactory.createLineBorder(java.awt.Color.gray))));

        artLabel.setBackground(java.awt.Color.white);
        artLabel.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        artLabel.setOpaque(true);
        artLabel.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                artLabelMousePressed(evt);
            }
        });
        scrollPane.setViewportView(artLabel);

        getContentPane().add(scrollPane, java.awt.BorderLayout.CENTER);

        setBounds(0, 0, 316, 316);
    }// </editor-fold>//GEN-END:initComponents

	private void formFocusLost( java.awt.event.FocusEvent evt ) {//GEN-FIRST:event_formFocusLost
            dispose();
	}//GEN-LAST:event_formFocusLost

	private void artLabelMousePressed( java.awt.event.MouseEvent evt ) {//GEN-FIRST:event_artLabelMousePressed
            dispose();
	}//GEN-LAST:event_artLabelMousePressed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel artLabel;
    private javax.swing.JScrollPane scrollPane;
    // End of variables declaration//GEN-END:variables
}
