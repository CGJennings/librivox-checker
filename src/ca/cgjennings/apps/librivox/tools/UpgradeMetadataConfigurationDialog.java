package ca.cgjennings.apps.librivox.tools;

import ca.cgjennings.apps.librivox.Checker;
import java.util.prefs.Preferences;
import ca.cgjennings.platform.PlatformSupport;
import static ca.cgjennings.apps.librivox.Checker.string;
import ca.cgjennings.util.Settings;

/**
 * A dialog that allows the user to configure how ID3 tags will be converted.
 *
 * @author Christopher G. Jennings (cjennings@acm.org)
 * @since 0.91
 */
class UpgradeMetadataConfigurationDialog extends javax.swing.JDialog {

	/** Creates new form UpgradeMetadataConfigurationDialog */
	public UpgradeMetadataConfigurationDialog( java.awt.Frame parent, boolean modal ) {
		super( parent, modal );
		initComponents();
		getRootPane().setDefaultButton( okBtn );
		PlatformSupport.correctOKCancelOrder( okBtn, cancelBtn );
		setLocationRelativeTo( parent );
		loadPreferences();
	}

	/** This method is called from within the constructor to
	 * initialize the form.
	 * WARNING: Do NOT modify this code. The content of this method is
	 * always regenerated by the Form Editor.
	 */
	@SuppressWarnings( "unchecked" )
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;

        v2Group = new javax.swing.ButtonGroup();
        javax.swing.JLabel jLabel1 = new javax.swing.JLabel();
        v23Btn = new javax.swing.JRadioButton();
        v24Btn = new javax.swing.JRadioButton();
        stripBtn = new javax.swing.JCheckBox();
        okPanel = new javax.swing.JPanel();
        okBtn = new javax.swing.JButton();
        cancelBtn = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle(string("upgrade-title")); // NOI18N
        setResizable(false);
        getContentPane().setLayout(new java.awt.GridBagLayout());

        jLabel1.setText(string("upgrade-prompt")); // NOI18N
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(16, 16, 0, 16);
        getContentPane().add(jLabel1, gridBagConstraints);

        v2Group.add(v23Btn);
        v23Btn.setSelected(true);
        v23Btn.setText(string("upgrade-v23")); // NOI18N
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_START;
        gridBagConstraints.insets = new java.awt.Insets(6, 32, 0, 16);
        getContentPane().add(v23Btn, gridBagConstraints);

        v2Group.add(v24Btn);
        v24Btn.setText(string("upgrade-v24")); // NOI18N
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_START;
        gridBagConstraints.insets = new java.awt.Insets(4, 32, 0, 16);
        getContentPane().add(v24Btn, gridBagConstraints);

        stripBtn.setSelected(true);
        stripBtn.setText(string("upgrade-remove-v1")); // NOI18N
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_START;
        gridBagConstraints.insets = new java.awt.Insets(12, 16, 16, 16);
        getContentPane().add(stripBtn, gridBagConstraints);

        okPanel.setLayout(new java.awt.GridLayout(1, 2, 8, 0));

        okBtn.setText(string("upgrade-ok")); // NOI18N
        okBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                okBtnActionPerformed(evt);
            }
        });
        okPanel.add(okBtn);

        cancelBtn.setText(string("cancel")); // NOI18N
        cancelBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cancelBtnActionPerformed(evt);
            }
        });
        okPanel.add(cancelBtn);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_END;
        gridBagConstraints.insets = new java.awt.Insets(0, 16, 8, 16);
        getContentPane().add(okPanel, gridBagConstraints);

        pack();
    }// </editor-fold>//GEN-END:initComponents

	private void okBtnActionPerformed( java.awt.event.ActionEvent evt ) {//GEN-FIRST:event_okBtnActionPerformed
		isOK = true;
		dispose();
	}//GEN-LAST:event_okBtnActionPerformed

	private void cancelBtnActionPerformed( java.awt.event.ActionEvent evt ) {//GEN-FIRST:event_cancelBtnActionPerformed
		dispose();
	}//GEN-LAST:event_cancelBtnActionPerformed

	/**
	 * Displays the dialog and returns <code>true</code> if the user
	 * chooses the OK option.
	 *
	 * @return <code>true</code> if conversion should proceed
	 */
	public boolean showDialog() {
		isOK = false;
		setVisible( true );
		savePreferences();
		return isOK;
	}
	private boolean isOK;

	/**
	 * Returns <code>true</code> if the tags should be converted to
	 * the latest version instead of v23.
	 *
	 * @return <code>true</code> if tags should be upgraded to the newest version
	 */
	public boolean isUpgradeToLatestVersionSelected() {
		return v24Btn.isSelected();
	}

	/**
	 * Returns <code>true</code> if obsolete tags should be deleted
	 * from the file.
	 *
	 * @return <code>true</code> if v1 tags should be removed
	 */
	public boolean isObsoleteTagStrippingSelected() {
		return stripBtn.isSelected();
	}

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton cancelBtn;
    private javax.swing.JButton okBtn;
    private javax.swing.JPanel okPanel;
    private javax.swing.JCheckBox stripBtn;
    private javax.swing.JRadioButton v23Btn;
    private javax.swing.JRadioButton v24Btn;
    private javax.swing.ButtonGroup v2Group;
    // End of variables declaration//GEN-END:variables

	private void loadPreferences() {
		Settings s = Checker.getSettings();
		stripBtn.setSelected( s.getBoolean( PREF_STRIP_ID3v1, true ) );
		if( s.getBoolean( PREF_USE_ID3v24, false ) ) {
			v24Btn.setSelected( true );
		} else {
			v23Btn.setSelected( true );
		}
	}

	private void savePreferences() {
		Settings s = Checker.getSettings();
		s.setBoolean( PREF_USE_ID3v24, v24Btn.isSelected() );
		s.setBoolean( PREF_STRIP_ID3v1, stripBtn.isSelected() );
		Checker.flushSettings();
	}

	private static final String PREF_USE_ID3v24 = "prefer ID3v24";
	private static final String PREF_STRIP_ID3v1 = "strip ID3v1";
}
